From 950c07f342f91810f4af7ed2b6c59bd98acc932d Mon Sep 17 00:00:00 2001
From: Klemens Nanni <kl3@posteo.org>
Date: Fri, 2 Sep 2016 14:53:30 +0200
Subject: [PATCH] Indicate the state of CapsLock through a different color

---
 config.def.h |  1 +
 slock.c      | 15 ++++++++++++---
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/config.def.h b/config.def.h
index eae2d9a..818ba47 100644
--- a/config.def.h
+++ b/config.def.h
@@ -2,6 +2,7 @@ static const char *colorname[NUMCOLS] = {
 	"black",     /* after initialization */
 	"#005577",   /* during input */
 	"#CC3333",   /* wrong password */
+	"red",       /* CapsLock on */
 };
 
 /* treat a cleared input like a wrong password */
diff --git a/slock.c b/slock.c
index 08ada6f..ed8f3b1 100644
--- a/slock.c
+++ b/slock.c
@@ -17,6 +17,7 @@
 #include <X11/keysym.h>
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
+#include <X11/XKBlib.h>
 
 #if HAVE_BSD_AUTH
 #include <login_cap.h>
@@ -32,6 +33,7 @@ enum {
 	INIT,
 	INPUT,
 	FAILED,
+	CAPS,
 	NUMCOLS
 };
 
@@ -130,16 +132,20 @@ readpw(Display *dpy, const char *pws)
 #endif
 {
 	char buf[32], passwd[256], *encrypted;
-	int num, screen, running, failure;
-	unsigned int len, color;
+	int caps, num, screen, running, failure;
+	unsigned int len, color, indicators;
 	KeySym ksym;
 	XEvent ev;
 	static int oldc = INIT;
 
 	len = 0;
+	caps = 0;
 	running = 1;
 	failure = 0;
 
+	if (!XkbGetIndicatorState(dpy, XkbUseCoreKbd, &indicators))
+		caps = indicators & 1;
+
 	/* As "slock" stands for "Simple X display locker", the DPMS settings
 	 * had been removed and you can set it with "xset" or some other
 	 * utility. This way the user can easily set a customized DPMS
@@ -187,6 +193,9 @@ readpw(Display *dpy, const char *pws)
 				if (len)
 					passwd[len--] = 0;
 				break;
+			case XK_Caps_Lock:
+				caps = !caps;
+				break;
 			default:
 				if (num && !iscntrl((int)buf[0]) && (len + num < sizeof(passwd))) {
 					memcpy(passwd + len, buf, num);
@@ -194,7 +203,7 @@ readpw(Display *dpy, const char *pws)
 				}
 				break;
 			}
-			color = len ? INPUT : (failure || failonclear ? FAILED : INIT);
+			color = len ? (caps ? CAPS : INPUT) : (failure || failonclear ? FAILED : INIT);
 			if (running && oldc != color) {
 				for (screen = 0; screen < nscreens; screen++) {
 					XSetWindowBackground(dpy, locks[screen]->win, locks[screen]->colors[color]);
-- 
2.8.3

