diff --cc surf.c
index fdfaab1,deb23b7..0000000
--- a/surf.c
+++ b/surf.c
@@@ -178,10 -185,10 +184,11 @@@ static void loaduri(Client *c, const Ar
  static void navigate(Client *c, const Arg *arg);
  static Client *newclient(void);
  static void newwindow(Client *c, const Arg *arg, gboolean noembed);
+ static gchar *parseuri(const gchar *uri);
  static void pasteuri(GtkClipboard *clipboard, const char *text, gpointer d);
  static gboolean contextmenu(WebKitWebView *view, GtkWidget *menu,
 -		WebKitHitTestResult *target, gboolean keyboard, Client *c);
 +                            WebKitHitTestResult *target, gboolean keyboard,
 +			    Client *c);
  static void menuactivate(GtkMenuItem *item, Client *c);
  static void print(Client *c, const Arg *arg);
  static GdkFilterReturn processx(GdkXEvent *xevent, GdkEvent *event,
@@@ -1172,11 -1128,25 +1178,26 @@@ menuactivate(GtkMenuItem *item, Client 
  	}
  }
  
- void
+ static gchar *
+ parseuri(const gchar *uri) {
+ 	guint i;
+ 
+ 	for (i = 0; i < LENGTH(searchengines); i++) {
+ 		if (searchengines[i].token == NULL || searchengines[i].uri == NULL || \
+ 		    *(uri + strlen(searchengines[i].token)) != ' ')
+ 			continue;
+ 		if (g_str_has_prefix(uri, searchengines[i].token))
+ 			return g_strdup_printf(searchengines[i].uri, uri + strlen(searchengines[i].token) + 1);
+ 	}
+ 
+ 	return g_strrstr(uri, "://") ? g_strdup(uri) : g_strdup_printf("http://%s", uri);
+ }
+ 
+ static void
 -pasteuri(GtkClipboard *clipboard, const char *text, gpointer d) {
 +pasteuri(GtkClipboard *clipboard, const char *text, gpointer d)
 +{
  	Arg arg = {.v = text };
 -	if(text != NULL)
 +	if (text != NULL)
  		loaduri((Client *) d, &arg);
  }
  
diff --git a/config.def.h b/config.def.h
index 93a3d49..4ac7f15 100644
--- a/config.def.h
+++ b/config.def.h
@@ -75,6 +75,13 @@ static SiteStyle styles[] = {
 	{ ".*",                 "default.css" },
 };
 
+/* search engines */
+static SearchEngine searchengines[] = {
+	{ "g",   "http://www.google.de/search?q=%s"   },
+	{ "leo", "http://dict.leo.org/ende?search=%s" },
+	{ "ddg", "https://duckduckgo.com/?q=%s"       },
+};
+
 #define MODKEY GDK_CONTROL_MASK
 
 /* hotkeys */
