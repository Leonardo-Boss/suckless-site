diff --git a/config.def.h b/config.def.h
index 875885b..93399d8 100644
--- a/config.def.h
+++ b/config.def.h
@@ -56,39 +56,39 @@ static const char *termcmd[]  = { "st", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-	TAGKEYS(                        XK_1,                      0)
-	TAGKEYS(                        XK_2,                      1)
-	TAGKEYS(                        XK_3,                      2)
-	TAGKEYS(                        XK_4,                      3)
-	TAGKEYS(                        XK_5,                      4)
-	TAGKEYS(                        XK_6,                      5)
-	TAGKEYS(                        XK_7,                      6)
-	TAGKEYS(                        XK_8,                      7)
-	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY,                       33,        spawn,          {.v = dmenucmd } },
+	{ MODKEY|ShiftMask,             36,        spawn,          {.v = termcmd } },
+	{ MODKEY,                       56,        togglebar,      {0} },
+	{ MODKEY,                       44,        focusstack,     {.i = +1 } },
+	{ MODKEY,                       45,        focusstack,     {.i = -1 } },
+	{ MODKEY,                       31,        incnmaster,     {.i = +1 } },
+	{ MODKEY,                       40,        incnmaster,     {.i = -1 } },
+	{ MODKEY,                       43,        setmfact,       {.f = -0.05} },
+	{ MODKEY,                       46,        setmfact,       {.f = +0.05} },
+	{ MODKEY,                       36,        zoom,           {0} },
+	{ MODKEY,                       23,        view,           {0} },
+	{ MODKEY|ShiftMask,             54,        killclient,     {0} },
+	{ MODKEY,                       28,        setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       41,        setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       58,        setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       65,        setlayout,      {0} },
+	{ MODKEY|ShiftMask,             65,        togglefloating, {0} },
+	{ MODKEY,                       19,        view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             19,        tag,            {.ui = ~0 } },
+	{ MODKEY,                       59,        focusmon,       {.i = -1 } },
+	{ MODKEY,                       60,        focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             59,        tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,             60,        tagmon,         {.i = +1 } },
+	TAGKEYS(                        10,                        0)
+	TAGKEYS(                        11,                        1)
+	TAGKEYS(                        12,                        2)
+	TAGKEYS(                        13,                        3)
+	TAGKEYS(                        14,                        4)
+	TAGKEYS(                        15,                        5)
+	TAGKEYS(                        16,                        6)
+	TAGKEYS(                        17,                        7)
+	TAGKEYS(                        18,                        8)
+	{ MODKEY|ShiftMask,             1,         quit,           {0} },
 };
 
 /* button definitions */
diff --git a/dwm.c b/dwm.c
index 1bbb4b3..54ddf00 100644
--- a/dwm.c
+++ b/dwm.c
@@ -31,7 +31,6 @@
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <X11/cursorfont.h>
-#include <X11/keysym.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
 #include <X11/Xproto.h>
@@ -100,7 +99,7 @@ struct Client {
 
 typedef struct {
 	unsigned int mod;
-	KeySym keysym;
+	KeyCode keycode;
 	void (*func)(const Arg *);
 	const Arg arg;
 } Key;
@@ -945,14 +944,12 @@ grabkeys(void) {
 	{
 		unsigned int i, j;
 		unsigned int modifiers[] = { 0, LockMask, numlockmask, numlockmask|LockMask };
-		KeyCode code;
 
 		XUngrabKey(dpy, AnyKey, AnyModifier, root);
 		for(i = 0; i < LENGTH(keys); i++)
-			if((code = XKeysymToKeycode(dpy, keys[i].keysym)))
-				for(j = 0; j < LENGTH(modifiers); j++)
-					XGrabKey(dpy, code, keys[i].mod | modifiers[j], root,
-						 True, GrabModeAsync, GrabModeAsync);
+			for(j = 0; j < LENGTH(modifiers); j++)
+				XGrabKey(dpy, keys[i].keycode, keys[i].mod | modifiers[j], root,
+				         True, GrabModeAsync, GrabModeAsync);
 	}
 }
 
@@ -976,13 +973,11 @@ isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info) {
 void
 keypress(XEvent *e) {
 	unsigned int i;
-	KeySym keysym;
 	XKeyEvent *ev;
 
 	ev = &e->xkey;
-	keysym = XKeycodeToKeysym(dpy, (KeyCode)ev->keycode, 0);
 	for(i = 0; i < LENGTH(keys); i++)
-		if(keysym == keys[i].keysym
+		if(ev->keycode == keys[i].keycode
 		&& CLEANMASK(keys[i].mod) == CLEANMASK(ev->state)
 		&& keys[i].func)
 			keys[i].func(&(keys[i].arg));
