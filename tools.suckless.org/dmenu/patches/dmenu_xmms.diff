diff -up dmenu-4.0/config.h dmenu-4.0_xmms/config.h
--- dmenu-4.0/config.h	2009-04-18 13:50:04.000000000 +0200
+++ dmenu-4.0_xmms/config.h	2009-11-19 21:31:17.000000000 +0100
@@ -7,3 +7,4 @@ static const char *normfgcolor = "#00000
 static const char *selbgcolor  = "#0066ff";
 static const char *selfgcolor  = "#ffffff";
 static unsigned int spaceitem  = 30; /* px between menu items */
+static unsigned int maxtokens  = 16; /* max. tokens for pattern matching */
diff -up dmenu-4.0/dmenu.1 dmenu-4.0_xmms/dmenu.1
--- dmenu-4.0/dmenu.1	2009-04-18 13:50:04.000000000 +0200
+++ dmenu-4.0_xmms/dmenu.1	2009-11-19 21:14:24.000000000 +0100
@@ -11,6 +11,7 @@ dmenu \- dynamic menu
 .RB [ \-p " <prompt>"]
 .RB [ \-sb " <color>"]
 .RB [ \-sf " <color>"]
+.RB [ \-xs ]
 .RB [ \-v ]
 .SH DESCRIPTION
 .SS Overview
@@ -44,6 +45,9 @@ defines the selected background color (#
 .B \-sf <color>
 defines the selected foreground color (#RGB, #RRGGBB, and color names are supported).
 .TP
+.B \-xs
+xmms-like pattern matching.
+.TP
 .B \-v
 prints version information to standard output, then exits.
 .SH USAGE
diff -up dmenu-4.0/dmenu.c dmenu-4.0_xmms/dmenu.c
--- dmenu-4.0/dmenu.c	2009-04-18 13:50:04.000000000 +0200
+++ dmenu-4.0_xmms/dmenu.c	2009-11-19 21:56:30.000000000 +0100
@@ -69,6 +69,7 @@ static int textw(const char *text);
 /* variables */
 static char *maxname = NULL;
 static char *prompt = NULL;
+static char **tokens = NULL;
 static char text[4096];
 static int cmdw = 0;
 static int promptw = 0;
@@ -77,6 +78,7 @@ static int screen;
 static unsigned int mw, mh;
 static unsigned int numlockmask = 0;
 static Bool running = True;
+static Bool xmms = False;
 static Display *dpy;
 static DC dc;
 static Item *allitems = NULL;	/* first of all items */
@@ -475,22 +477,55 @@ kpress(XKeyEvent * e) {
 	drawmenu();
 }
 
+unsigned int tokenize(char *pat, char **tok)
+{
+	unsigned int i = 0;
+	char tmp[4096] = {0};
+
+	strncpy(tmp, pat, strlen(pat));
+	tok[0] = strtok(tmp, " ");
+
+	while(tok[i] && i < maxtokens)
+		tok[++i] = strtok(NULL, " ");
+	return i;
+}
+
 void
 match(char *pattern) {
-	unsigned int plen;
+	unsigned int plen, tokencnt = 0;
+	char append = 0;
 	Item *i, *itemend, *lexact, *lprefix, *lsubstr, *exactend, *prefixend, *substrend;
 
 	if(!pattern)
 		return;
-	plen = strlen(pattern);
+
+	if(!xmms)
+		tokens[(tokencnt = 1)-1] = pattern;
+	else
+		if(!(tokencnt = tokenize(pattern, tokens)))
+			tokens[(tokencnt = 1)-1] = "";
 	item = lexact = lprefix = lsubstr = itemend = exactend = prefixend = substrend = NULL;
-	for(i = allitems; i; i = i->next)
-		if(!fstrncmp(pattern, i->text, plen + 1))
+	for(i = allitems; i; i = i->next) {
+		for(int j = 0; j < tokencnt; ++j) {
+			plen = strlen(tokens[j]);
+			if(!fstrncmp(tokens[j], i->text, plen + 1))
+				append = !append || append > 1 ? 1 : append;
+			else if(!fstrncmp(tokens[j], i->text, plen ))
+				append = !append || append > 2 ? 2 : append;
+			else if(fstrstr(i->text, tokens[j]))
+				append = append > 0 && append < 3 ? append : 3;
+			else {
+				append = 0;
+				break;
+			}
+		}
+		if(append == 1)
 			appenditem(i, &lexact, &exactend);
-		else if(!fstrncmp(pattern, i->text, plen))
+		else if(append == 2)
 			appenditem(i, &lprefix, &prefixend);
-		else if(fstrstr(i->text, pattern))
+		else if(append == 3)
 			appenditem(i, &lsubstr, &substrend);
+	}
 	if(lexact) {
 		item = lexact;
 		itemend = exactend;
@@ -643,6 +678,7 @@ setup(Bool topbar) {
 	if(promptw > mw / 5)
 		promptw = mw / 5;
 	text[0] = 0;
+	tokens = malloc((xmms?maxtokens:1)*sizeof(char*));
 	match(text);
 	XMapRaised(dpy, win);
 }
@@ -694,11 +730,13 @@ main(int argc, char *argv[]) {
 		else if(!strcmp(argv[i], "-sf")) {
 			if(++i < argc) selfgcolor = argv[i];
 		}
+		else if(!strcmp(argv[i], "-xs"))
+			xmms = True;
 		else if(!strcmp(argv[i], "-v"))
 			eprint("dmenu-"VERSION", Â© 2006-2008 dmenu engineers, see LICENSE for details\n");
 		else
 			eprint("usage: dmenu [-i] [-b] [-fn <font>] [-nb <color>] [-nf <color>]\n"
-			       "             [-p <prompt>] [-sb <color>] [-sf <color>] [-v]\n");
+			       "             [-p <prompt>] [-sb <color>] [-sf <color>] [-xs] [-v]\n");
 	if(!setlocale(LC_CTYPE, "") || !XSupportsLocale())
 		fprintf(stderr, "warning: no locale support\n");
 	if(!(dpy = XOpenDisplay(NULL)))
