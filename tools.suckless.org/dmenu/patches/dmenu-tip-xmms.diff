diff -r de7ad128a8b9 dmenu.1
--- a/dmenu.1	Fri Aug 06 14:16:08 2010 +0100
+++ b/dmenu.1	Sat Aug 07 21:28:03 2010 +0100
@@ -19,6 +19,7 @@
 .IR color ]
 .RB [ \-sf
 .IR color ]
+.RB [ \-xs ]
 .RB [ \-v ]
 .P
 .BR dmenu_run " ..."
@@ -72,6 +73,9 @@
 .BI \-sf " color"
 defines the selected foreground color.
 .TP
+.B \-xs
+xmms-like pattern matching.
+.TP
 .B \-v
 prints version information to standard output, then exits.
 .SH USAGE
diff -r de7ad128a8b9 dmenu.c
--- a/dmenu.c	Fri Aug 06 14:16:08 2010 +0100
+++ b/dmenu.c	Sat Aug 07 21:28:03 2010 +0100
@@ -45,6 +45,9 @@
 static const char *normfgcolor = "#000000";
 static const char *selbgcolor  = "#0066ff";
 static const char *selfgcolor  = "#ffffff";
+static const unsigned int maxtokens  = 16; /* max. tokens for pattern matching */
+static char **tokens = NULL;
+static Bool xmms = False;
 static unsigned int inputw = 0;
 static unsigned int lines = 0;
 static unsigned int mw, mh;
@@ -339,20 +342,53 @@
 	drawmenu();
 }
 
+unsigned int
+tokenize(char **tok) {
+	unsigned int i = 0;
+	char tmp[sizeof text] = {0};
+
+	strcpy(tmp, text);
+	tok[0] = strtok(tmp, " ");
+
+	while(tok[i] && i < maxtokens)
+		tok[++i] = strtok(NULL, " ");
+	return i;
+}
+
 void
 match(void) {
 	size_t len;
+	unsigned int tokencnt = 0;
+	char append = 0;
 	Item *item, *itemend, *lexact, *lprefix, *lsubstr, *exactend, *prefixend, *substrend;
 
-	len = strlen(text);
+	if(!xmms)
+		tokens[(tokencnt = 1)-1] = text;
+	else
+		if(!(tokencnt = tokenize(tokens)))
+			tokens[(tokencnt = 1)-1] = "";
 	matches = lexact = lprefix = lsubstr = itemend = exactend = prefixend = substrend = NULL;
-	for(item = allitems; item; item = item->next)
-		if(!fstrncmp(text, item->text, len + 1))
-			appenditem(item, &lexact, &exactend);
-		else if(!fstrncmp(text, item->text, len))
-			appenditem(item, &lprefix, &prefixend);
-		else if(fstrstr(item->text, text))
-			appenditem(item, &lsubstr, &substrend);
+	for(item = allitems; item; item = item->next) {
+		for(int j = 0; j < tokencnt; ++j) {
+			len = strlen(tokens[j]);
+			if(!fstrncmp(tokens[j], item->text, len + 1))
+				append = !append || append > 1 ? 1 : append;
+			else if(!fstrncmp(tokens[j], item->text, len ))
+				append = !append || append > 2 ? 2 : append;
+			else if(fstrstr(item->text, tokens[j]))
+				append = append > 0 && append < 3 ? append : 3;
+			else {
+				append = 0;
+				break;
+			}
+		}
+		if(append == 1)
+ 			appenditem(item, &lexact, &exactend);
+		else if(append == 2)
+ 			appenditem(item, &lprefix, &prefixend);
+		else if(append == 3)
+ 			appenditem(item, &lsubstr, &substrend);
+	}
 	if(lexact) {
 		matches = lexact;
 		itemend = exactend;
@@ -495,13 +531,14 @@
 	promptw = prompt ? MIN(textw(dc, prompt), mw/5) : 0;
 	XMapRaised(dc->dpy, win);
 	text[0] = '\0';
+	tokens = malloc((xmms?maxtokens:1)*sizeof(char*));
 	match();
 }
 
 void
 usage(void) {
 	fputs("usage: dmenu [-b] [-i] [-l lines] [-p prompt] [-fn font] [-nb color]\n"
-	      "             [-nf color] [-sb color] [-sf color] [-v]\n", stderr);
+	      "             [-nf color] [-sb color] [-sf color] [-xs] [-v]\n", stderr);
 	exit(EXIT_FAILURE);
 }
 
@@ -541,6 +578,8 @@
 			selbgcolor = argv[++i];
 		else if(!strcmp(argv[i], "-sf"))
 			selfgcolor = argv[++i];
+		else if(!strcmp(argv[i], "-xs"))
+			xmms = True;
 		else
 			usage();
 
